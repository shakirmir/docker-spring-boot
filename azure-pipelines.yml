trigger:
- master  # Define the branch to trigger the pipeline

pr:
- '*'  # Build pull requests from all branches

pool:
  vmImage: 'ubuntu-latest'  # Use a suitable agent image

variables:
  # Define variables for your Azure and Docker Hub resources
  azureSubscription: 'Visual Studio Enterprise Subscription â€“ MPN'  # Azure Service Connection name
 # azureResourceGroup: 'YourResourceGroup'  # Azure Resource Group where AKS is located
 # aksClusterName: 'YourAKSClusterName'  # Name of your AKS cluster
  dockerHubRegistry: 'shakirdocker'  # Docker Hub username
  dockerHubPassword: $(DOCKERHUB_PASSWORD)  # Docker Hub password variable (set as a secret in your pipeline)
  dockerImageName: 'shakirdocker/mysonarquberepo'  # Name of your Docker image

stages:
- stage: Build
  jobs:
  - job: BuildAndPush
    displayName: 'Build and Push Docker Image'
    steps:
 - task: JavaToolInstaller@0
  inputs:
    versionSpec: '13'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'

    - script: |
        # Build your Java application using Maven
        mvn clean install  # Replace with your Maven build command
      displayName: 'Build Java App with Maven'

    - task: SonarQubePrepare@4
      inputs:
        SonarQube: 'mysonarsvc'  # Name of your SonarQube service connection
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'sonarqubeprojectkey'
        cliProjectName: 'mysonarqube'
        cliSources: '$(Build.SourcesDirectory)'
        extraProperties: |
          sonar.java.source=1.8
          sonar.java.binaries=target/classes

    - task: Docker@2
      inputs:
        containerRegistryType: 'Container Registry'
        dockerRegistryEndpoint: 'mydockersvcsonar'  # Azure DevOps service connection to Docker Hub
        dockerFile: 'Dockerfile'  # Path to your Dockerfile
        buildContext: '$(Build.SourcesDirectory)'
        imageName: $(dockerImageName)
        includeLatestTag: true
        containerCommand: 'buildAndPush'
        arguments: '-t $(dockerImageName):$(Build.BuildId)'
